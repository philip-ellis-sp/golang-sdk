/*
IdentityNow cc (private) APIs

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sailpointccsdk

import (
	"encoding/json"
)

// DeleteAccountSchemaAttributeRequest struct for DeleteAccountSchemaAttributeRequest
type DeleteAccountSchemaAttributeRequest struct {
	ObjectType *string `json:"objectType,omitempty"`
	Names *string `json:"names,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _DeleteAccountSchemaAttributeRequest DeleteAccountSchemaAttributeRequest

// NewDeleteAccountSchemaAttributeRequest instantiates a new DeleteAccountSchemaAttributeRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteAccountSchemaAttributeRequest() *DeleteAccountSchemaAttributeRequest {
	this := DeleteAccountSchemaAttributeRequest{}
	return &this
}

// NewDeleteAccountSchemaAttributeRequestWithDefaults instantiates a new DeleteAccountSchemaAttributeRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteAccountSchemaAttributeRequestWithDefaults() *DeleteAccountSchemaAttributeRequest {
	this := DeleteAccountSchemaAttributeRequest{}
	return &this
}

// GetObjectType returns the ObjectType field value if set, zero value otherwise.
func (o *DeleteAccountSchemaAttributeRequest) GetObjectType() string {
	if o == nil || isNil(o.ObjectType) {
		var ret string
		return ret
	}
	return *o.ObjectType
}

// GetObjectTypeOk returns a tuple with the ObjectType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteAccountSchemaAttributeRequest) GetObjectTypeOk() (*string, bool) {
	if o == nil || isNil(o.ObjectType) {
		return nil, false
	}
	return o.ObjectType, true
}

// HasObjectType returns a boolean if a field has been set.
func (o *DeleteAccountSchemaAttributeRequest) HasObjectType() bool {
	if o != nil && !isNil(o.ObjectType) {
		return true
	}

	return false
}

// SetObjectType gets a reference to the given string and assigns it to the ObjectType field.
func (o *DeleteAccountSchemaAttributeRequest) SetObjectType(v string) {
	o.ObjectType = &v
}

// GetNames returns the Names field value if set, zero value otherwise.
func (o *DeleteAccountSchemaAttributeRequest) GetNames() string {
	if o == nil || isNil(o.Names) {
		var ret string
		return ret
	}
	return *o.Names
}

// GetNamesOk returns a tuple with the Names field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteAccountSchemaAttributeRequest) GetNamesOk() (*string, bool) {
	if o == nil || isNil(o.Names) {
		return nil, false
	}
	return o.Names, true
}

// HasNames returns a boolean if a field has been set.
func (o *DeleteAccountSchemaAttributeRequest) HasNames() bool {
	if o != nil && !isNil(o.Names) {
		return true
	}

	return false
}

// SetNames gets a reference to the given string and assigns it to the Names field.
func (o *DeleteAccountSchemaAttributeRequest) SetNames(v string) {
	o.Names = &v
}

func (o DeleteAccountSchemaAttributeRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.ObjectType) {
		toSerialize["objectType"] = o.ObjectType
	}
	if !isNil(o.Names) {
		toSerialize["names"] = o.Names
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *DeleteAccountSchemaAttributeRequest) UnmarshalJSON(bytes []byte) (err error) {
	varDeleteAccountSchemaAttributeRequest := _DeleteAccountSchemaAttributeRequest{}

	if err = json.Unmarshal(bytes, &varDeleteAccountSchemaAttributeRequest); err == nil {
		*o = DeleteAccountSchemaAttributeRequest(varDeleteAccountSchemaAttributeRequest)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "objectType")
		delete(additionalProperties, "names")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDeleteAccountSchemaAttributeRequest struct {
	value *DeleteAccountSchemaAttributeRequest
	isSet bool
}

func (v NullableDeleteAccountSchemaAttributeRequest) Get() *DeleteAccountSchemaAttributeRequest {
	return v.value
}

func (v *NullableDeleteAccountSchemaAttributeRequest) Set(val *DeleteAccountSchemaAttributeRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteAccountSchemaAttributeRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteAccountSchemaAttributeRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteAccountSchemaAttributeRequest(val *DeleteAccountSchemaAttributeRequest) *NullableDeleteAccountSchemaAttributeRequest {
	return &NullableDeleteAccountSchemaAttributeRequest{value: val, isSet: true}
}

func (v NullableDeleteAccountSchemaAttributeRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteAccountSchemaAttributeRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


