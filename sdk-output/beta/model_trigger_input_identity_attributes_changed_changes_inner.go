/*
IdentityNow Beta API

Use these APIs to interact with the IdentityNow platform to achieve repeatable, automated processes with greater scalability. These APIs are in beta and are subject to change. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: 3.1.0-beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sailpointbetasdk

import (
	"encoding/json"
)

// TriggerInputIdentityAttributesChangedChangesInner struct for TriggerInputIdentityAttributesChangedChangesInner
type TriggerInputIdentityAttributesChangedChangesInner struct {
	// The name of the identity attribute that changed.
	Attribute string `json:"attribute"`
	OldValue NullableTriggerInputIdentityAttributesChangedChangesInnerOldValue `json:"oldValue,omitempty"`
	NewValue *TriggerInputIdentityAttributesChangedChangesInnerNewValue `json:"newValue,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _TriggerInputIdentityAttributesChangedChangesInner TriggerInputIdentityAttributesChangedChangesInner

// NewTriggerInputIdentityAttributesChangedChangesInner instantiates a new TriggerInputIdentityAttributesChangedChangesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTriggerInputIdentityAttributesChangedChangesInner(attribute string) *TriggerInputIdentityAttributesChangedChangesInner {
	this := TriggerInputIdentityAttributesChangedChangesInner{}
	this.Attribute = attribute
	return &this
}

// NewTriggerInputIdentityAttributesChangedChangesInnerWithDefaults instantiates a new TriggerInputIdentityAttributesChangedChangesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTriggerInputIdentityAttributesChangedChangesInnerWithDefaults() *TriggerInputIdentityAttributesChangedChangesInner {
	this := TriggerInputIdentityAttributesChangedChangesInner{}
	return &this
}

// GetAttribute returns the Attribute field value
func (o *TriggerInputIdentityAttributesChangedChangesInner) GetAttribute() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Attribute
}

// GetAttributeOk returns a tuple with the Attribute field value
// and a boolean to check if the value has been set.
func (o *TriggerInputIdentityAttributesChangedChangesInner) GetAttributeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Attribute, true
}

// SetAttribute sets field value
func (o *TriggerInputIdentityAttributesChangedChangesInner) SetAttribute(v string) {
	o.Attribute = v
}

// GetOldValue returns the OldValue field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TriggerInputIdentityAttributesChangedChangesInner) GetOldValue() TriggerInputIdentityAttributesChangedChangesInnerOldValue {
	if o == nil || isNil(o.OldValue.Get()) {
		var ret TriggerInputIdentityAttributesChangedChangesInnerOldValue
		return ret
	}
	return *o.OldValue.Get()
}

// GetOldValueOk returns a tuple with the OldValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TriggerInputIdentityAttributesChangedChangesInner) GetOldValueOk() (*TriggerInputIdentityAttributesChangedChangesInnerOldValue, bool) {
	if o == nil {
		return nil, false
	}
	return o.OldValue.Get(), o.OldValue.IsSet()
}

// HasOldValue returns a boolean if a field has been set.
func (o *TriggerInputIdentityAttributesChangedChangesInner) HasOldValue() bool {
	if o != nil && o.OldValue.IsSet() {
		return true
	}

	return false
}

// SetOldValue gets a reference to the given NullableTriggerInputIdentityAttributesChangedChangesInnerOldValue and assigns it to the OldValue field.
func (o *TriggerInputIdentityAttributesChangedChangesInner) SetOldValue(v TriggerInputIdentityAttributesChangedChangesInnerOldValue) {
	o.OldValue.Set(&v)
}
// SetOldValueNil sets the value for OldValue to be an explicit nil
func (o *TriggerInputIdentityAttributesChangedChangesInner) SetOldValueNil() {
	o.OldValue.Set(nil)
}

// UnsetOldValue ensures that no value is present for OldValue, not even an explicit nil
func (o *TriggerInputIdentityAttributesChangedChangesInner) UnsetOldValue() {
	o.OldValue.Unset()
}

// GetNewValue returns the NewValue field value if set, zero value otherwise.
func (o *TriggerInputIdentityAttributesChangedChangesInner) GetNewValue() TriggerInputIdentityAttributesChangedChangesInnerNewValue {
	if o == nil || isNil(o.NewValue) {
		var ret TriggerInputIdentityAttributesChangedChangesInnerNewValue
		return ret
	}
	return *o.NewValue
}

// GetNewValueOk returns a tuple with the NewValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TriggerInputIdentityAttributesChangedChangesInner) GetNewValueOk() (*TriggerInputIdentityAttributesChangedChangesInnerNewValue, bool) {
	if o == nil || isNil(o.NewValue) {
		return nil, false
	}
	return o.NewValue, true
}

// HasNewValue returns a boolean if a field has been set.
func (o *TriggerInputIdentityAttributesChangedChangesInner) HasNewValue() bool {
	if o != nil && !isNil(o.NewValue) {
		return true
	}

	return false
}

// SetNewValue gets a reference to the given TriggerInputIdentityAttributesChangedChangesInnerNewValue and assigns it to the NewValue field.
func (o *TriggerInputIdentityAttributesChangedChangesInner) SetNewValue(v TriggerInputIdentityAttributesChangedChangesInnerNewValue) {
	o.NewValue = &v
}

func (o TriggerInputIdentityAttributesChangedChangesInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["attribute"] = o.Attribute
	}
	if o.OldValue.IsSet() {
		toSerialize["oldValue"] = o.OldValue.Get()
	}
	if !isNil(o.NewValue) {
		toSerialize["newValue"] = o.NewValue
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *TriggerInputIdentityAttributesChangedChangesInner) UnmarshalJSON(bytes []byte) (err error) {
	varTriggerInputIdentityAttributesChangedChangesInner := _TriggerInputIdentityAttributesChangedChangesInner{}

	if err = json.Unmarshal(bytes, &varTriggerInputIdentityAttributesChangedChangesInner); err == nil {
		*o = TriggerInputIdentityAttributesChangedChangesInner(varTriggerInputIdentityAttributesChangedChangesInner)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "attribute")
		delete(additionalProperties, "oldValue")
		delete(additionalProperties, "newValue")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableTriggerInputIdentityAttributesChangedChangesInner struct {
	value *TriggerInputIdentityAttributesChangedChangesInner
	isSet bool
}

func (v NullableTriggerInputIdentityAttributesChangedChangesInner) Get() *TriggerInputIdentityAttributesChangedChangesInner {
	return v.value
}

func (v *NullableTriggerInputIdentityAttributesChangedChangesInner) Set(val *TriggerInputIdentityAttributesChangedChangesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableTriggerInputIdentityAttributesChangedChangesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableTriggerInputIdentityAttributesChangedChangesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTriggerInputIdentityAttributesChangedChangesInner(val *TriggerInputIdentityAttributesChangedChangesInner) *NullableTriggerInputIdentityAttributesChangedChangesInner {
	return &NullableTriggerInputIdentityAttributesChangedChangesInner{value: val, isSet: true}
}

func (v NullableTriggerInputIdentityAttributesChangedChangesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTriggerInputIdentityAttributesChangedChangesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


