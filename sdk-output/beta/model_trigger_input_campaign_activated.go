/*
IdentityNow Beta API

Use these APIs to interact with the IdentityNow platform to achieve repeatable, automated processes with greater scalability. These APIs are in beta and are subject to change. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: 3.1.0-beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sailpointbetasdk

import (
	"encoding/json"
)

// TriggerInputCampaignActivated struct for TriggerInputCampaignActivated
type TriggerInputCampaignActivated struct {
	Campaign TriggerInputCampaignActivatedCampaign `json:"campaign"`
	AdditionalProperties map[string]interface{}
}

type _TriggerInputCampaignActivated TriggerInputCampaignActivated

// NewTriggerInputCampaignActivated instantiates a new TriggerInputCampaignActivated object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTriggerInputCampaignActivated(campaign TriggerInputCampaignActivatedCampaign) *TriggerInputCampaignActivated {
	this := TriggerInputCampaignActivated{}
	this.Campaign = campaign
	return &this
}

// NewTriggerInputCampaignActivatedWithDefaults instantiates a new TriggerInputCampaignActivated object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTriggerInputCampaignActivatedWithDefaults() *TriggerInputCampaignActivated {
	this := TriggerInputCampaignActivated{}
	return &this
}

// GetCampaign returns the Campaign field value
func (o *TriggerInputCampaignActivated) GetCampaign() TriggerInputCampaignActivatedCampaign {
	if o == nil {
		var ret TriggerInputCampaignActivatedCampaign
		return ret
	}

	return o.Campaign
}

// GetCampaignOk returns a tuple with the Campaign field value
// and a boolean to check if the value has been set.
func (o *TriggerInputCampaignActivated) GetCampaignOk() (*TriggerInputCampaignActivatedCampaign, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Campaign, true
}

// SetCampaign sets field value
func (o *TriggerInputCampaignActivated) SetCampaign(v TriggerInputCampaignActivatedCampaign) {
	o.Campaign = v
}

func (o TriggerInputCampaignActivated) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["campaign"] = o.Campaign
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *TriggerInputCampaignActivated) UnmarshalJSON(bytes []byte) (err error) {
	varTriggerInputCampaignActivated := _TriggerInputCampaignActivated{}

	if err = json.Unmarshal(bytes, &varTriggerInputCampaignActivated); err == nil {
		*o = TriggerInputCampaignActivated(varTriggerInputCampaignActivated)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "campaign")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableTriggerInputCampaignActivated struct {
	value *TriggerInputCampaignActivated
	isSet bool
}

func (v NullableTriggerInputCampaignActivated) Get() *TriggerInputCampaignActivated {
	return v.value
}

func (v *NullableTriggerInputCampaignActivated) Set(val *TriggerInputCampaignActivated) {
	v.value = val
	v.isSet = true
}

func (v NullableTriggerInputCampaignActivated) IsSet() bool {
	return v.isSet
}

func (v *NullableTriggerInputCampaignActivated) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTriggerInputCampaignActivated(val *TriggerInputCampaignActivated) *NullableTriggerInputCampaignActivated {
	return &NullableTriggerInputCampaignActivated{value: val, isSet: true}
}

func (v NullableTriggerInputCampaignActivated) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTriggerInputCampaignActivated) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


