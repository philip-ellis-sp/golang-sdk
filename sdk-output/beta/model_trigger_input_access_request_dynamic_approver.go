/*
IdentityNow Beta API

Use these APIs to interact with the IdentityNow platform to achieve repeatable, automated processes with greater scalability. These APIs are in beta and are subject to change. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: 3.1.0-beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sailpointbetasdk

import (
	"encoding/json"
)

// TriggerInputAccessRequestDynamicApprover struct for TriggerInputAccessRequestDynamicApprover
type TriggerInputAccessRequestDynamicApprover struct {
	// The unique ID of the access request object. Can be used with the [access request status endpoint](https://developer.sailpoint.com/idn/api/beta/list-access-request-status) to get the status of the request. 
	AccessRequestId string `json:"accessRequestId"`
	RequestedFor TriggerInputAccessRequestDynamicApproverRequestedFor `json:"requestedFor"`
	// The access items that are being requested.
	RequestedItems []TriggerInputAccessRequestDynamicApproverRequestedItemsInner `json:"requestedItems"`
	RequestedBy TriggerInputAccessRequestDynamicApproverRequestedBy `json:"requestedBy"`
	AdditionalProperties map[string]interface{}
}

type _TriggerInputAccessRequestDynamicApprover TriggerInputAccessRequestDynamicApprover

// NewTriggerInputAccessRequestDynamicApprover instantiates a new TriggerInputAccessRequestDynamicApprover object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTriggerInputAccessRequestDynamicApprover(accessRequestId string, requestedFor TriggerInputAccessRequestDynamicApproverRequestedFor, requestedItems []TriggerInputAccessRequestDynamicApproverRequestedItemsInner, requestedBy TriggerInputAccessRequestDynamicApproverRequestedBy) *TriggerInputAccessRequestDynamicApprover {
	this := TriggerInputAccessRequestDynamicApprover{}
	this.AccessRequestId = accessRequestId
	this.RequestedFor = requestedFor
	this.RequestedItems = requestedItems
	this.RequestedBy = requestedBy
	return &this
}

// NewTriggerInputAccessRequestDynamicApproverWithDefaults instantiates a new TriggerInputAccessRequestDynamicApprover object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTriggerInputAccessRequestDynamicApproverWithDefaults() *TriggerInputAccessRequestDynamicApprover {
	this := TriggerInputAccessRequestDynamicApprover{}
	return &this
}

// GetAccessRequestId returns the AccessRequestId field value
func (o *TriggerInputAccessRequestDynamicApprover) GetAccessRequestId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccessRequestId
}

// GetAccessRequestIdOk returns a tuple with the AccessRequestId field value
// and a boolean to check if the value has been set.
func (o *TriggerInputAccessRequestDynamicApprover) GetAccessRequestIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccessRequestId, true
}

// SetAccessRequestId sets field value
func (o *TriggerInputAccessRequestDynamicApprover) SetAccessRequestId(v string) {
	o.AccessRequestId = v
}

// GetRequestedFor returns the RequestedFor field value
func (o *TriggerInputAccessRequestDynamicApprover) GetRequestedFor() TriggerInputAccessRequestDynamicApproverRequestedFor {
	if o == nil {
		var ret TriggerInputAccessRequestDynamicApproverRequestedFor
		return ret
	}

	return o.RequestedFor
}

// GetRequestedForOk returns a tuple with the RequestedFor field value
// and a boolean to check if the value has been set.
func (o *TriggerInputAccessRequestDynamicApprover) GetRequestedForOk() (*TriggerInputAccessRequestDynamicApproverRequestedFor, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RequestedFor, true
}

// SetRequestedFor sets field value
func (o *TriggerInputAccessRequestDynamicApprover) SetRequestedFor(v TriggerInputAccessRequestDynamicApproverRequestedFor) {
	o.RequestedFor = v
}

// GetRequestedItems returns the RequestedItems field value
func (o *TriggerInputAccessRequestDynamicApprover) GetRequestedItems() []TriggerInputAccessRequestDynamicApproverRequestedItemsInner {
	if o == nil {
		var ret []TriggerInputAccessRequestDynamicApproverRequestedItemsInner
		return ret
	}

	return o.RequestedItems
}

// GetRequestedItemsOk returns a tuple with the RequestedItems field value
// and a boolean to check if the value has been set.
func (o *TriggerInputAccessRequestDynamicApprover) GetRequestedItemsOk() ([]TriggerInputAccessRequestDynamicApproverRequestedItemsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.RequestedItems, true
}

// SetRequestedItems sets field value
func (o *TriggerInputAccessRequestDynamicApprover) SetRequestedItems(v []TriggerInputAccessRequestDynamicApproverRequestedItemsInner) {
	o.RequestedItems = v
}

// GetRequestedBy returns the RequestedBy field value
func (o *TriggerInputAccessRequestDynamicApprover) GetRequestedBy() TriggerInputAccessRequestDynamicApproverRequestedBy {
	if o == nil {
		var ret TriggerInputAccessRequestDynamicApproverRequestedBy
		return ret
	}

	return o.RequestedBy
}

// GetRequestedByOk returns a tuple with the RequestedBy field value
// and a boolean to check if the value has been set.
func (o *TriggerInputAccessRequestDynamicApprover) GetRequestedByOk() (*TriggerInputAccessRequestDynamicApproverRequestedBy, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RequestedBy, true
}

// SetRequestedBy sets field value
func (o *TriggerInputAccessRequestDynamicApprover) SetRequestedBy(v TriggerInputAccessRequestDynamicApproverRequestedBy) {
	o.RequestedBy = v
}

func (o TriggerInputAccessRequestDynamicApprover) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["accessRequestId"] = o.AccessRequestId
	}
	if true {
		toSerialize["requestedFor"] = o.RequestedFor
	}
	if true {
		toSerialize["requestedItems"] = o.RequestedItems
	}
	if true {
		toSerialize["requestedBy"] = o.RequestedBy
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *TriggerInputAccessRequestDynamicApprover) UnmarshalJSON(bytes []byte) (err error) {
	varTriggerInputAccessRequestDynamicApprover := _TriggerInputAccessRequestDynamicApprover{}

	if err = json.Unmarshal(bytes, &varTriggerInputAccessRequestDynamicApprover); err == nil {
		*o = TriggerInputAccessRequestDynamicApprover(varTriggerInputAccessRequestDynamicApprover)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "accessRequestId")
		delete(additionalProperties, "requestedFor")
		delete(additionalProperties, "requestedItems")
		delete(additionalProperties, "requestedBy")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableTriggerInputAccessRequestDynamicApprover struct {
	value *TriggerInputAccessRequestDynamicApprover
	isSet bool
}

func (v NullableTriggerInputAccessRequestDynamicApprover) Get() *TriggerInputAccessRequestDynamicApprover {
	return v.value
}

func (v *NullableTriggerInputAccessRequestDynamicApprover) Set(val *TriggerInputAccessRequestDynamicApprover) {
	v.value = val
	v.isSet = true
}

func (v NullableTriggerInputAccessRequestDynamicApprover) IsSet() bool {
	return v.isSet
}

func (v *NullableTriggerInputAccessRequestDynamicApprover) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTriggerInputAccessRequestDynamicApprover(val *TriggerInputAccessRequestDynamicApprover) *NullableTriggerInputAccessRequestDynamicApprover {
	return &NullableTriggerInputAccessRequestDynamicApprover{value: val, isSet: true}
}

func (v NullableTriggerInputAccessRequestDynamicApprover) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTriggerInputAccessRequestDynamicApprover) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


