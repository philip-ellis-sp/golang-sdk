/*
IdentityNow Beta API

Use these APIs to interact with the IdentityNow platform to achieve repeatable, automated processes with greater scalability. These APIs are in beta and are subject to change. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: 3.1.0-beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sailpointbetasdk

import (
	"encoding/json"
	"time"
)

// GetPersonalAccessTokenResponse struct for GetPersonalAccessTokenResponse
type GetPersonalAccessTokenResponse struct {
	// The ID of the personal access token (to be used as the username for Basic Auth).
	Id string `json:"id"`
	// The name of the personal access token. Cannot be the same as other personal access tokens owned by a user.
	Name string `json:"name"`
	// Scopes of the personal  access token.
	Scope []string `json:"scope"`
	Owner BaseReferenceDto `json:"owner"`
	// The date and time, down to the millisecond, when this personal access token was created.
	Created time.Time `json:"created"`
	AdditionalProperties map[string]interface{}
}

type _GetPersonalAccessTokenResponse GetPersonalAccessTokenResponse

// NewGetPersonalAccessTokenResponse instantiates a new GetPersonalAccessTokenResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetPersonalAccessTokenResponse(id string, name string, scope []string, owner BaseReferenceDto, created time.Time) *GetPersonalAccessTokenResponse {
	this := GetPersonalAccessTokenResponse{}
	this.Id = id
	this.Name = name
	this.Scope = scope
	this.Owner = owner
	this.Created = created
	return &this
}

// NewGetPersonalAccessTokenResponseWithDefaults instantiates a new GetPersonalAccessTokenResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetPersonalAccessTokenResponseWithDefaults() *GetPersonalAccessTokenResponse {
	this := GetPersonalAccessTokenResponse{}
	return &this
}

// GetId returns the Id field value
func (o *GetPersonalAccessTokenResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *GetPersonalAccessTokenResponse) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *GetPersonalAccessTokenResponse) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *GetPersonalAccessTokenResponse) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *GetPersonalAccessTokenResponse) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *GetPersonalAccessTokenResponse) SetName(v string) {
	o.Name = v
}

// GetScope returns the Scope field value
// If the value is explicit nil, the zero value for []string will be returned
func (o *GetPersonalAccessTokenResponse) GetScope() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Scope
}

// GetScopeOk returns a tuple with the Scope field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetPersonalAccessTokenResponse) GetScopeOk() ([]string, bool) {
	if o == nil || isNil(o.Scope) {
		return nil, false
	}
	return o.Scope, true
}

// SetScope sets field value
func (o *GetPersonalAccessTokenResponse) SetScope(v []string) {
	o.Scope = v
}

// GetOwner returns the Owner field value
func (o *GetPersonalAccessTokenResponse) GetOwner() BaseReferenceDto {
	if o == nil {
		var ret BaseReferenceDto
		return ret
	}

	return o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value
// and a boolean to check if the value has been set.
func (o *GetPersonalAccessTokenResponse) GetOwnerOk() (*BaseReferenceDto, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Owner, true
}

// SetOwner sets field value
func (o *GetPersonalAccessTokenResponse) SetOwner(v BaseReferenceDto) {
	o.Owner = v
}

// GetCreated returns the Created field value
func (o *GetPersonalAccessTokenResponse) GetCreated() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Created
}

// GetCreatedOk returns a tuple with the Created field value
// and a boolean to check if the value has been set.
func (o *GetPersonalAccessTokenResponse) GetCreatedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Created, true
}

// SetCreated sets field value
func (o *GetPersonalAccessTokenResponse) SetCreated(v time.Time) {
	o.Created = v
}

func (o GetPersonalAccessTokenResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.Scope != nil {
		toSerialize["scope"] = o.Scope
	}
	if true {
		toSerialize["owner"] = o.Owner
	}
	if true {
		toSerialize["created"] = o.Created
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *GetPersonalAccessTokenResponse) UnmarshalJSON(bytes []byte) (err error) {
	varGetPersonalAccessTokenResponse := _GetPersonalAccessTokenResponse{}

	if err = json.Unmarshal(bytes, &varGetPersonalAccessTokenResponse); err == nil {
		*o = GetPersonalAccessTokenResponse(varGetPersonalAccessTokenResponse)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "name")
		delete(additionalProperties, "scope")
		delete(additionalProperties, "owner")
		delete(additionalProperties, "created")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGetPersonalAccessTokenResponse struct {
	value *GetPersonalAccessTokenResponse
	isSet bool
}

func (v NullableGetPersonalAccessTokenResponse) Get() *GetPersonalAccessTokenResponse {
	return v.value
}

func (v *NullableGetPersonalAccessTokenResponse) Set(val *GetPersonalAccessTokenResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetPersonalAccessTokenResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetPersonalAccessTokenResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetPersonalAccessTokenResponse(val *GetPersonalAccessTokenResponse) *NullableGetPersonalAccessTokenResponse {
	return &NullableGetPersonalAccessTokenResponse{value: val, isSet: true}
}

func (v NullableGetPersonalAccessTokenResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetPersonalAccessTokenResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


