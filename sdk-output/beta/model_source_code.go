/*
IdentityNow Beta API

Use these APIs to interact with the IdentityNow platform to achieve repeatable, automated processes with greater scalability. These APIs are in beta and are subject to change. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: 3.1.0-beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sailpointbetasdk

import (
	"encoding/json"
)

// SourceCode SourceCode
type SourceCode struct {
	// the version of the code
	Version string `json:"version"`
	// The code
	Script string `json:"script"`
	AdditionalProperties map[string]interface{}
}

type _SourceCode SourceCode

// NewSourceCode instantiates a new SourceCode object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSourceCode(version string, script string) *SourceCode {
	this := SourceCode{}
	this.Version = version
	this.Script = script
	return &this
}

// NewSourceCodeWithDefaults instantiates a new SourceCode object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSourceCodeWithDefaults() *SourceCode {
	this := SourceCode{}
	return &this
}

// GetVersion returns the Version field value
func (o *SourceCode) GetVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *SourceCode) GetVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *SourceCode) SetVersion(v string) {
	o.Version = v
}

// GetScript returns the Script field value
func (o *SourceCode) GetScript() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Script
}

// GetScriptOk returns a tuple with the Script field value
// and a boolean to check if the value has been set.
func (o *SourceCode) GetScriptOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Script, true
}

// SetScript sets field value
func (o *SourceCode) SetScript(v string) {
	o.Script = v
}

func (o SourceCode) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["version"] = o.Version
	}
	if true {
		toSerialize["script"] = o.Script
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *SourceCode) UnmarshalJSON(bytes []byte) (err error) {
	varSourceCode := _SourceCode{}

	if err = json.Unmarshal(bytes, &varSourceCode); err == nil {
		*o = SourceCode(varSourceCode)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "version")
		delete(additionalProperties, "script")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSourceCode struct {
	value *SourceCode
	isSet bool
}

func (v NullableSourceCode) Get() *SourceCode {
	return v.value
}

func (v *NullableSourceCode) Set(val *SourceCode) {
	v.value = val
	v.isSet = true
}

func (v NullableSourceCode) IsSet() bool {
	return v.isSet
}

func (v *NullableSourceCode) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSourceCode(val *SourceCode) *NullableSourceCode {
	return &NullableSourceCode{value: val, isSet: true}
}

func (v NullableSourceCode) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSourceCode) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


