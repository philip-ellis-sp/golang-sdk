/*
IdentityNow Beta API

Use these APIs to interact with the IdentityNow platform to achieve repeatable, automated processes with greater scalability. These APIs are in beta and are subject to change. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: 3.1.0-beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sailpointsdk

import (
	"encoding/json"
	"time"
)

// WorkflowAllOf struct for WorkflowAllOf
type WorkflowAllOf struct {
	// Workflow ID. This is a UUID generated upon creation.
	Id *string `json:"id,omitempty"`
	// The number of times this workflow has been executed
	ExecutionCount *int32 `json:"executionCount,omitempty"`
	// The number of times this workflow has failed during execution
	FailureCount *int32 `json:"failureCount,omitempty"`
	// The date and time the workflow was created
	Created *time.Time `json:"created,omitempty"`
	// The identity that created the workflow.
	Creator *BaseReferenceDto `json:"creator,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _WorkflowAllOf WorkflowAllOf

// NewWorkflowAllOf instantiates a new WorkflowAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkflowAllOf() *WorkflowAllOf {
	this := WorkflowAllOf{}
	return &this
}

// NewWorkflowAllOfWithDefaults instantiates a new WorkflowAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkflowAllOfWithDefaults() *WorkflowAllOf {
	this := WorkflowAllOf{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *WorkflowAllOf) GetId() string {
	if o == nil || isNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowAllOf) GetIdOk() (*string, bool) {
	if o == nil || isNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *WorkflowAllOf) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *WorkflowAllOf) SetId(v string) {
	o.Id = &v
}

// GetExecutionCount returns the ExecutionCount field value if set, zero value otherwise.
func (o *WorkflowAllOf) GetExecutionCount() int32 {
	if o == nil || isNil(o.ExecutionCount) {
		var ret int32
		return ret
	}
	return *o.ExecutionCount
}

// GetExecutionCountOk returns a tuple with the ExecutionCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowAllOf) GetExecutionCountOk() (*int32, bool) {
	if o == nil || isNil(o.ExecutionCount) {
		return nil, false
	}
	return o.ExecutionCount, true
}

// HasExecutionCount returns a boolean if a field has been set.
func (o *WorkflowAllOf) HasExecutionCount() bool {
	if o != nil && !isNil(o.ExecutionCount) {
		return true
	}

	return false
}

// SetExecutionCount gets a reference to the given int32 and assigns it to the ExecutionCount field.
func (o *WorkflowAllOf) SetExecutionCount(v int32) {
	o.ExecutionCount = &v
}

// GetFailureCount returns the FailureCount field value if set, zero value otherwise.
func (o *WorkflowAllOf) GetFailureCount() int32 {
	if o == nil || isNil(o.FailureCount) {
		var ret int32
		return ret
	}
	return *o.FailureCount
}

// GetFailureCountOk returns a tuple with the FailureCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowAllOf) GetFailureCountOk() (*int32, bool) {
	if o == nil || isNil(o.FailureCount) {
		return nil, false
	}
	return o.FailureCount, true
}

// HasFailureCount returns a boolean if a field has been set.
func (o *WorkflowAllOf) HasFailureCount() bool {
	if o != nil && !isNil(o.FailureCount) {
		return true
	}

	return false
}

// SetFailureCount gets a reference to the given int32 and assigns it to the FailureCount field.
func (o *WorkflowAllOf) SetFailureCount(v int32) {
	o.FailureCount = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *WorkflowAllOf) GetCreated() time.Time {
	if o == nil || isNil(o.Created) {
		var ret time.Time
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowAllOf) GetCreatedOk() (*time.Time, bool) {
	if o == nil || isNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *WorkflowAllOf) HasCreated() bool {
	if o != nil && !isNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given time.Time and assigns it to the Created field.
func (o *WorkflowAllOf) SetCreated(v time.Time) {
	o.Created = &v
}

// GetCreator returns the Creator field value if set, zero value otherwise.
func (o *WorkflowAllOf) GetCreator() BaseReferenceDto {
	if o == nil || isNil(o.Creator) {
		var ret BaseReferenceDto
		return ret
	}
	return *o.Creator
}

// GetCreatorOk returns a tuple with the Creator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowAllOf) GetCreatorOk() (*BaseReferenceDto, bool) {
	if o == nil || isNil(o.Creator) {
		return nil, false
	}
	return o.Creator, true
}

// HasCreator returns a boolean if a field has been set.
func (o *WorkflowAllOf) HasCreator() bool {
	if o != nil && !isNil(o.Creator) {
		return true
	}

	return false
}

// SetCreator gets a reference to the given BaseReferenceDto and assigns it to the Creator field.
func (o *WorkflowAllOf) SetCreator(v BaseReferenceDto) {
	o.Creator = &v
}

func (o WorkflowAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.ExecutionCount) {
		toSerialize["executionCount"] = o.ExecutionCount
	}
	if !isNil(o.FailureCount) {
		toSerialize["failureCount"] = o.FailureCount
	}
	if !isNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !isNil(o.Creator) {
		toSerialize["creator"] = o.Creator
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *WorkflowAllOf) UnmarshalJSON(bytes []byte) (err error) {
	varWorkflowAllOf := _WorkflowAllOf{}

	if err = json.Unmarshal(bytes, &varWorkflowAllOf); err == nil {
		*o = WorkflowAllOf(varWorkflowAllOf)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "executionCount")
		delete(additionalProperties, "failureCount")
		delete(additionalProperties, "created")
		delete(additionalProperties, "creator")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableWorkflowAllOf struct {
	value *WorkflowAllOf
	isSet bool
}

func (v NullableWorkflowAllOf) Get() *WorkflowAllOf {
	return v.value
}

func (v *NullableWorkflowAllOf) Set(val *WorkflowAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkflowAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkflowAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkflowAllOf(val *WorkflowAllOf) *NullableWorkflowAllOf {
	return &NullableWorkflowAllOf{value: val, isSet: true}
}

func (v NullableWorkflowAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkflowAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


