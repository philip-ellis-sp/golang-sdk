/*
IdentityNow Beta API

Use these APIs to interact with the IdentityNow platform to achieve repeatable, automated processes with greater scalability. These APIs are in beta and are subject to change. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: 3.1.0-beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sailpointsdk

import (
	"encoding/json"
)

// EventBridgeConfig struct for EventBridgeConfig
type EventBridgeConfig struct {
	// AWS Account Number (12-digit number) that has the EventBridge Partner Event Source Resource.
	AwsAccount string `json:"awsAccount"`
	// AWS Region that has the EventBridge Partner Event Source Resource. See https://docs.aws.amazon.com/general/latest/gr/rande.html for a full list of available values.
	AwsRegion string `json:"awsRegion"`
	AdditionalProperties map[string]interface{}
}

type _EventBridgeConfig EventBridgeConfig

// NewEventBridgeConfig instantiates a new EventBridgeConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEventBridgeConfig(awsAccount string, awsRegion string) *EventBridgeConfig {
	this := EventBridgeConfig{}
	this.AwsAccount = awsAccount
	this.AwsRegion = awsRegion
	return &this
}

// NewEventBridgeConfigWithDefaults instantiates a new EventBridgeConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEventBridgeConfigWithDefaults() *EventBridgeConfig {
	this := EventBridgeConfig{}
	return &this
}

// GetAwsAccount returns the AwsAccount field value
func (o *EventBridgeConfig) GetAwsAccount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AwsAccount
}

// GetAwsAccountOk returns a tuple with the AwsAccount field value
// and a boolean to check if the value has been set.
func (o *EventBridgeConfig) GetAwsAccountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AwsAccount, true
}

// SetAwsAccount sets field value
func (o *EventBridgeConfig) SetAwsAccount(v string) {
	o.AwsAccount = v
}

// GetAwsRegion returns the AwsRegion field value
func (o *EventBridgeConfig) GetAwsRegion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AwsRegion
}

// GetAwsRegionOk returns a tuple with the AwsRegion field value
// and a boolean to check if the value has been set.
func (o *EventBridgeConfig) GetAwsRegionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AwsRegion, true
}

// SetAwsRegion sets field value
func (o *EventBridgeConfig) SetAwsRegion(v string) {
	o.AwsRegion = v
}

func (o EventBridgeConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["awsAccount"] = o.AwsAccount
	}
	if true {
		toSerialize["awsRegion"] = o.AwsRegion
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *EventBridgeConfig) UnmarshalJSON(bytes []byte) (err error) {
	varEventBridgeConfig := _EventBridgeConfig{}

	if err = json.Unmarshal(bytes, &varEventBridgeConfig); err == nil {
		*o = EventBridgeConfig(varEventBridgeConfig)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "awsAccount")
		delete(additionalProperties, "awsRegion")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableEventBridgeConfig struct {
	value *EventBridgeConfig
	isSet bool
}

func (v NullableEventBridgeConfig) Get() *EventBridgeConfig {
	return v.value
}

func (v *NullableEventBridgeConfig) Set(val *EventBridgeConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableEventBridgeConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableEventBridgeConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEventBridgeConfig(val *EventBridgeConfig) *NullableEventBridgeConfig {
	return &NullableEventBridgeConfig{value: val, isSet: true}
}

func (v NullableEventBridgeConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEventBridgeConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


