/*
IdentityNow Beta API

Use these APIs to interact with the IdentityNow platform to achieve repeatable, automated processes with greater scalability. These APIs are in beta and are subject to change. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: 3.1.0-beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sailpointbetasdk

import (
	"encoding/json"
	"time"
)

// TriggerInputSourceUpdated struct for TriggerInputSourceUpdated
type TriggerInputSourceUpdated struct {
	// The unique ID of the source.
	Id string `json:"id"`
	// The user friendly name of the source.
	Name string `json:"name"`
	// The connection type of the source.
	Type string `json:"type"`
	// The date and time the source was modified.
	Modified time.Time `json:"modified"`
	// The connector type used to connect to the source.
	Connector string `json:"connector"`
	Actor TriggerInputSourceUpdatedActor `json:"actor"`
	AdditionalProperties map[string]interface{}
}

type _TriggerInputSourceUpdated TriggerInputSourceUpdated

// NewTriggerInputSourceUpdated instantiates a new TriggerInputSourceUpdated object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTriggerInputSourceUpdated(id string, name string, type_ string, modified time.Time, connector string, actor TriggerInputSourceUpdatedActor) *TriggerInputSourceUpdated {
	this := TriggerInputSourceUpdated{}
	this.Id = id
	this.Name = name
	this.Type = type_
	this.Modified = modified
	this.Connector = connector
	this.Actor = actor
	return &this
}

// NewTriggerInputSourceUpdatedWithDefaults instantiates a new TriggerInputSourceUpdated object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTriggerInputSourceUpdatedWithDefaults() *TriggerInputSourceUpdated {
	this := TriggerInputSourceUpdated{}
	return &this
}

// GetId returns the Id field value
func (o *TriggerInputSourceUpdated) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *TriggerInputSourceUpdated) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *TriggerInputSourceUpdated) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *TriggerInputSourceUpdated) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *TriggerInputSourceUpdated) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *TriggerInputSourceUpdated) SetName(v string) {
	o.Name = v
}

// GetType returns the Type field value
func (o *TriggerInputSourceUpdated) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *TriggerInputSourceUpdated) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *TriggerInputSourceUpdated) SetType(v string) {
	o.Type = v
}

// GetModified returns the Modified field value
func (o *TriggerInputSourceUpdated) GetModified() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Modified
}

// GetModifiedOk returns a tuple with the Modified field value
// and a boolean to check if the value has been set.
func (o *TriggerInputSourceUpdated) GetModifiedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Modified, true
}

// SetModified sets field value
func (o *TriggerInputSourceUpdated) SetModified(v time.Time) {
	o.Modified = v
}

// GetConnector returns the Connector field value
func (o *TriggerInputSourceUpdated) GetConnector() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Connector
}

// GetConnectorOk returns a tuple with the Connector field value
// and a boolean to check if the value has been set.
func (o *TriggerInputSourceUpdated) GetConnectorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Connector, true
}

// SetConnector sets field value
func (o *TriggerInputSourceUpdated) SetConnector(v string) {
	o.Connector = v
}

// GetActor returns the Actor field value
func (o *TriggerInputSourceUpdated) GetActor() TriggerInputSourceUpdatedActor {
	if o == nil {
		var ret TriggerInputSourceUpdatedActor
		return ret
	}

	return o.Actor
}

// GetActorOk returns a tuple with the Actor field value
// and a boolean to check if the value has been set.
func (o *TriggerInputSourceUpdated) GetActorOk() (*TriggerInputSourceUpdatedActor, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Actor, true
}

// SetActor sets field value
func (o *TriggerInputSourceUpdated) SetActor(v TriggerInputSourceUpdatedActor) {
	o.Actor = v
}

func (o TriggerInputSourceUpdated) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["modified"] = o.Modified
	}
	if true {
		toSerialize["connector"] = o.Connector
	}
	if true {
		toSerialize["actor"] = o.Actor
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *TriggerInputSourceUpdated) UnmarshalJSON(bytes []byte) (err error) {
	varTriggerInputSourceUpdated := _TriggerInputSourceUpdated{}

	if err = json.Unmarshal(bytes, &varTriggerInputSourceUpdated); err == nil {
		*o = TriggerInputSourceUpdated(varTriggerInputSourceUpdated)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "name")
		delete(additionalProperties, "type")
		delete(additionalProperties, "modified")
		delete(additionalProperties, "connector")
		delete(additionalProperties, "actor")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableTriggerInputSourceUpdated struct {
	value *TriggerInputSourceUpdated
	isSet bool
}

func (v NullableTriggerInputSourceUpdated) Get() *TriggerInputSourceUpdated {
	return v.value
}

func (v *NullableTriggerInputSourceUpdated) Set(val *TriggerInputSourceUpdated) {
	v.value = val
	v.isSet = true
}

func (v NullableTriggerInputSourceUpdated) IsSet() bool {
	return v.isSet
}

func (v *NullableTriggerInputSourceUpdated) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTriggerInputSourceUpdated(val *TriggerInputSourceUpdated) *NullableTriggerInputSourceUpdated {
	return &NullableTriggerInputSourceUpdated{value: val, isSet: true}
}

func (v NullableTriggerInputSourceUpdated) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTriggerInputSourceUpdated) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


