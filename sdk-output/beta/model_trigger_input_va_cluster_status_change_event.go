/*
IdentityNow Beta API

Use these APIs to interact with the IdentityNow platform to achieve repeatable, automated processes with greater scalability. These APIs are in beta and are subject to change. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: 3.1.0-beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sailpointsdk

import (
	"encoding/json"
	"time"
)

// TriggerInputVAClusterStatusChangeEvent struct for TriggerInputVAClusterStatusChangeEvent
type TriggerInputVAClusterStatusChangeEvent struct {
	// The date and time the status change occurred.
	Created time.Time `json:"created"`
	// The type of the object that initiated this event.
	Type map[string]interface{} `json:"type"`
	Application TriggerInputVAClusterStatusChangeEventApplication `json:"application"`
	HealthCheckResult TriggerInputVAClusterStatusChangeEventHealthCheckResult `json:"healthCheckResult"`
	PreviousHealthCheckResult TriggerInputVAClusterStatusChangeEventPreviousHealthCheckResult `json:"previousHealthCheckResult"`
	AdditionalProperties map[string]interface{}
}

type _TriggerInputVAClusterStatusChangeEvent TriggerInputVAClusterStatusChangeEvent

// NewTriggerInputVAClusterStatusChangeEvent instantiates a new TriggerInputVAClusterStatusChangeEvent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTriggerInputVAClusterStatusChangeEvent(created time.Time, type_ map[string]interface{}, application TriggerInputVAClusterStatusChangeEventApplication, healthCheckResult TriggerInputVAClusterStatusChangeEventHealthCheckResult, previousHealthCheckResult TriggerInputVAClusterStatusChangeEventPreviousHealthCheckResult) *TriggerInputVAClusterStatusChangeEvent {
	this := TriggerInputVAClusterStatusChangeEvent{}
	this.Created = created
	this.Type = type_
	this.Application = application
	this.HealthCheckResult = healthCheckResult
	this.PreviousHealthCheckResult = previousHealthCheckResult
	return &this
}

// NewTriggerInputVAClusterStatusChangeEventWithDefaults instantiates a new TriggerInputVAClusterStatusChangeEvent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTriggerInputVAClusterStatusChangeEventWithDefaults() *TriggerInputVAClusterStatusChangeEvent {
	this := TriggerInputVAClusterStatusChangeEvent{}
	return &this
}

// GetCreated returns the Created field value
func (o *TriggerInputVAClusterStatusChangeEvent) GetCreated() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Created
}

// GetCreatedOk returns a tuple with the Created field value
// and a boolean to check if the value has been set.
func (o *TriggerInputVAClusterStatusChangeEvent) GetCreatedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Created, true
}

// SetCreated sets field value
func (o *TriggerInputVAClusterStatusChangeEvent) SetCreated(v time.Time) {
	o.Created = v
}

// GetType returns the Type field value
func (o *TriggerInputVAClusterStatusChangeEvent) GetType() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *TriggerInputVAClusterStatusChangeEvent) GetTypeOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.Type, true
}

// SetType sets field value
func (o *TriggerInputVAClusterStatusChangeEvent) SetType(v map[string]interface{}) {
	o.Type = v
}

// GetApplication returns the Application field value
func (o *TriggerInputVAClusterStatusChangeEvent) GetApplication() TriggerInputVAClusterStatusChangeEventApplication {
	if o == nil {
		var ret TriggerInputVAClusterStatusChangeEventApplication
		return ret
	}

	return o.Application
}

// GetApplicationOk returns a tuple with the Application field value
// and a boolean to check if the value has been set.
func (o *TriggerInputVAClusterStatusChangeEvent) GetApplicationOk() (*TriggerInputVAClusterStatusChangeEventApplication, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Application, true
}

// SetApplication sets field value
func (o *TriggerInputVAClusterStatusChangeEvent) SetApplication(v TriggerInputVAClusterStatusChangeEventApplication) {
	o.Application = v
}

// GetHealthCheckResult returns the HealthCheckResult field value
func (o *TriggerInputVAClusterStatusChangeEvent) GetHealthCheckResult() TriggerInputVAClusterStatusChangeEventHealthCheckResult {
	if o == nil {
		var ret TriggerInputVAClusterStatusChangeEventHealthCheckResult
		return ret
	}

	return o.HealthCheckResult
}

// GetHealthCheckResultOk returns a tuple with the HealthCheckResult field value
// and a boolean to check if the value has been set.
func (o *TriggerInputVAClusterStatusChangeEvent) GetHealthCheckResultOk() (*TriggerInputVAClusterStatusChangeEventHealthCheckResult, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HealthCheckResult, true
}

// SetHealthCheckResult sets field value
func (o *TriggerInputVAClusterStatusChangeEvent) SetHealthCheckResult(v TriggerInputVAClusterStatusChangeEventHealthCheckResult) {
	o.HealthCheckResult = v
}

// GetPreviousHealthCheckResult returns the PreviousHealthCheckResult field value
func (o *TriggerInputVAClusterStatusChangeEvent) GetPreviousHealthCheckResult() TriggerInputVAClusterStatusChangeEventPreviousHealthCheckResult {
	if o == nil {
		var ret TriggerInputVAClusterStatusChangeEventPreviousHealthCheckResult
		return ret
	}

	return o.PreviousHealthCheckResult
}

// GetPreviousHealthCheckResultOk returns a tuple with the PreviousHealthCheckResult field value
// and a boolean to check if the value has been set.
func (o *TriggerInputVAClusterStatusChangeEvent) GetPreviousHealthCheckResultOk() (*TriggerInputVAClusterStatusChangeEventPreviousHealthCheckResult, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PreviousHealthCheckResult, true
}

// SetPreviousHealthCheckResult sets field value
func (o *TriggerInputVAClusterStatusChangeEvent) SetPreviousHealthCheckResult(v TriggerInputVAClusterStatusChangeEventPreviousHealthCheckResult) {
	o.PreviousHealthCheckResult = v
}

func (o TriggerInputVAClusterStatusChangeEvent) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["created"] = o.Created
	}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["application"] = o.Application
	}
	if true {
		toSerialize["healthCheckResult"] = o.HealthCheckResult
	}
	if true {
		toSerialize["previousHealthCheckResult"] = o.PreviousHealthCheckResult
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *TriggerInputVAClusterStatusChangeEvent) UnmarshalJSON(bytes []byte) (err error) {
	varTriggerInputVAClusterStatusChangeEvent := _TriggerInputVAClusterStatusChangeEvent{}

	if err = json.Unmarshal(bytes, &varTriggerInputVAClusterStatusChangeEvent); err == nil {
		*o = TriggerInputVAClusterStatusChangeEvent(varTriggerInputVAClusterStatusChangeEvent)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "created")
		delete(additionalProperties, "type")
		delete(additionalProperties, "application")
		delete(additionalProperties, "healthCheckResult")
		delete(additionalProperties, "previousHealthCheckResult")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableTriggerInputVAClusterStatusChangeEvent struct {
	value *TriggerInputVAClusterStatusChangeEvent
	isSet bool
}

func (v NullableTriggerInputVAClusterStatusChangeEvent) Get() *TriggerInputVAClusterStatusChangeEvent {
	return v.value
}

func (v *NullableTriggerInputVAClusterStatusChangeEvent) Set(val *TriggerInputVAClusterStatusChangeEvent) {
	v.value = val
	v.isSet = true
}

func (v NullableTriggerInputVAClusterStatusChangeEvent) IsSet() bool {
	return v.isSet
}

func (v *NullableTriggerInputVAClusterStatusChangeEvent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTriggerInputVAClusterStatusChangeEvent(val *TriggerInputVAClusterStatusChangeEvent) *NullableTriggerInputVAClusterStatusChangeEvent {
	return &NullableTriggerInputVAClusterStatusChangeEvent{value: val, isSet: true}
}

func (v NullableTriggerInputVAClusterStatusChangeEvent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTriggerInputVAClusterStatusChangeEvent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


